"""modified settings table, value for tie updated

Revision ID: ac1e3e87aeb9
Revises: d8bf205cbf7b
Create Date: 2025-01-04 21:59:07.727139

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ac1e3e87aeb9'
down_revision: Union[str, None] = 'd8bf205cbf7b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('settings', 'tieRule',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('settings', 'playoffTieRule',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('settings', 'playoffSeedTieRule',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('settings', 'playoffSeedTieRule',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('settings', 'playoffTieRule',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('settings', 'tieRule',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=True)
    # ### end Alembic commands ###
